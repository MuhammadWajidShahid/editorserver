{"version":3,"sources":["components/editor.jsx","components/web.jsx","components/xterm.jsx","components/c_cpp.jsx","components/mainpage.jsx","App.js","serviceWorker.js","index.js"],"names":["MyEditor","props","theme","mode","defvalue","update","react_default","a","createElement","lib_default","placeholder","name","width","height","onChange","fontSize","showPrintMargin","showGutter","highlightActiveLine","value","editorProps","$blockScrolling","Infinity","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","Web","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","preview","ifr","refs","contentWindow","document","open","write","state","html","close","style","append","css","js","getElementsByTagName","appendChild","updatehtml","val","setState","updatecss","updatejs","changeValue","e","index_es","container","item","lg","sm","xs","padding","indicatorColor","textColor","variant","scrollButtons","label","editor","paddingTop","color","onClick","float","ref","Component","Term","Terminal","applyAddon","fit","xterm","terminal","focus","on","key","ev","charCodeAt","socket","emit","res","console","log","clear","C_Cpp","main","zIndex","back","runcpp","curstate","data","number","code","cpp","updatecpp","_this2","_this$state","_this$props","classes","position","className","classNames","runcompile","components_xterm","withStyles","backgroundColor","top","MainPage","input","flex","align","react_router_dom","to","react_router","path","component","components_c_cpp","web","React","io","window","location","origin","App","done","fetch","concat","method","then","text","alert","catch","err","Math","random","mainpage","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.08d65a21.chunk.js","sourcesContent":["import React from \"react\";\r\nimport AceEditor from 'react-ace';\r\nimport brace from 'brace';\r\nimport { Editor } from 'brace';\r\n\r\nimport 'brace/mode/java';\r\nimport 'brace/mode/csharp';\r\n\r\nimport 'brace/theme/github';\r\nimport 'brace/theme/monokai';\r\n\r\nimport 'brace/mode/html';\r\nimport 'brace/mode/c_cpp';\r\nimport 'brace/mode/javascript';\r\nimport 'brace/mode/css';\r\n\r\n\r\nimport 'brace/theme/xcode';\r\n\r\n\r\nimport 'brace/snippets/html';\r\n\r\nimport 'brace/snippets/csharp';\r\n\r\nimport 'brace/ext/language_tools';\r\nconst MyEditor =(props)=>{\r\n    const {theme,mode,defvalue,update}=props;\r\n    return(\r\n<AceEditor\r\n  placeholder=\"Placeholder Text\"\r\n  mode={mode}\r\n  theme={theme}\r\n  name=\"blah2\"\r\n  width=\"100%\"\r\n  height=\"660px\"\r\n  // onLoad={this.onLoad}\r\n  onChange={update}\r\n  fontSize={14}\r\n  showPrintMargin={true}\r\n  showGutter={true}\r\n  highlightActiveLine={true}\r\n  value={defvalue}\r\n  editorProps={{$blockScrolling: Infinity}}\r\n  setOptions={{\r\n  enableBasicAutocompletion: true,\r\n  enableLiveAutocompletion: true,\r\n  enableSnippets: true,\r\n  showLineNumbers: true,\r\n  tabSize: 2,\r\n  }}/>\r\n    );\r\n};\r\n\r\nexport default MyEditor;","import React ,{Component} from \"react\";\r\nimport MyEditor from \"./editor\";\r\nimport {\r\n    AppBar,\r\n    CssBaseline,\r\n    Toolbar,\r\n    Typography,\r\n    Grid,\r\n    Tab,\r\n    Tabs,\r\n    Button\r\n} from \"@material-ui/core\";\r\nclass Web extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            value:0,\r\n            html:`<!--Write your html here-->`,\r\n            css:\"/*Write css here*/\",\r\n            js:\"//Write javascript here\",\r\n        }\r\n    }\r\n    preview=()=>{\r\n        var ifr=this.refs.ifr.contentWindow.document;\r\n        ifr.open()\r\n        ifr.write(this.state.html)\r\n        ifr.close()\r\n        var style=document.createElement(\"style\");\r\n        style.append(this.state.css);\r\n        var js=document.createElement(\"script\");\r\n        js.append(this.state.js);\r\n        ifr.getElementsByTagName(\"head\")[0].appendChild(style);\r\n        ifr.getElementsByTagName(\"head\")[0].appendChild(js);\r\n    }\r\n   \r\n    updatehtml=(val)=>{\r\n        this.setState({html:val})\r\n    }\r\n\r\n    updatecss=val=>\r\n    this.setState({css:val})\r\n\r\n    updatejs=val=>\r\n    this.setState({js:val})\r\n\r\n    changeValue=(e,val)=>{\r\n        this.setState({value:val})\r\n    }\r\n\r\n    render()\r\n    {\r\n        const {value}=this.state;\r\n        return(\r\n            <Grid container>\r\n            <Grid item lg={6} sm={12} xs={12}>\r\n                <div style={{width:\"100%\",padding:\"1%\"}}>\r\n                <Tabs\r\n                value={value}\r\n                onChange={this.changeValue}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                variant=\"scrollable\"\r\n                scrollButtons=\"auto\"\r\n                >\r\n                    <Tab label=\"HTML\"></Tab>\r\n                    <Tab label=\"CSS\"></Tab>\r\n                    <Tab label=\"JS\"></Tab>\r\n                    {/* <Tab label=\"c/c++\"></Tab> */}\r\n                    </Tabs>\r\n                    {value===0&&<MyEditor mode=\"html\" theme=\"monokai\" update={this.updatehtml} defvalue={this.state.html}/>}\r\n                    {value===1&&<MyEditor mode=\"css\" theme=\"monokai\" update={this.updatecss} defvalue={this.state.css}/> }\r\n                    {value===2&&<MyEditor mode=\"javascript\" theme=\"monokai\" update={this.updatejs} defvalue={this.state.js}/>}\r\n                    {/* {value===3&&<MyEditor mode=\"c_cpp\" theme=\"monokai\" update={this.updatecpp} defvalue={this.state.cpp}/>} */}\r\n                    </div>\r\n                </Grid>\r\n                <Grid item lg={6} sm={12} xs={12}>\r\n                <div style={{width:\"100%\",padding:\"1%\"}}>\r\n                <div style={{width:\"100%\",height:\"47px\",paddingTop:\"5px\"}}>\r\n\r\n                <Button \r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.preview\r\n                }\r\n                style={{float:\"left\"}}\r\n                >\r\n                run\r\n                    </Button>\r\n                    </div>\r\n                    <iframe ref=\"ifr\" style={{width:\"100%\",height:660}}></iframe>\r\n                </div>\r\n                </Grid>\r\n                </Grid>\r\n        )\r\n    }\r\n}\r\nexport default Web;","import React, { Component } from \"react\";\r\nimport { Terminal } from 'xterm';\r\nimport \"xterm/dist/xterm.css\";\r\nimport \"xterm/dist/xterm.js\";\r\nimport * as fit from 'xterm/lib/addons/fit/fit';\r\n\r\nclass Term extends Component {\r\n    componentDidMount() {\r\n        Terminal.applyAddon(fit);\r\n        var xterm = new Terminal();\r\n        xterm.open(this.refs.terminal);\r\n        xterm.fit();\r\n        xterm.focus();\r\n        xterm.on('key', (key, ev) => {\r\n            // console.log(key.charCodeAt(0));\r\n            if (key.charCodeAt(0) == 13) {\r\n                // xterm.write('\\n');\r\n                this.props.socket.emit(\"message\", '\\n');\r\n            }\r\n            // xterm.write(key);\r\n            // console.log(key);\r\n            this.props.socket.emit(\"message\", key);\r\n        });\r\n        this.props.socket.on(\"responce\", res => {\r\n            xterm.focus();\r\n            xterm.write(res);\r\n            console.log(res);\r\n        });\r\n        this.props.socket.on(\"running\", val => {\r\n            if (val) {\r\n                xterm.clear();\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div ref=\"terminal\" style={{ width: \"100%\" }}></div>\r\n        );\r\n    }\r\n}\r\nexport default Term;","import React, { Component } from \"react\";\r\nimport MyEditor from \"./editor\";\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Grid,\r\n    Tab,\r\n    Tabs,\r\n    Button,\r\n    CircularProgress,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport Term from \"./xterm\";\r\nconst styles = theme => ({\r\n    main:{\r\n        zIndex:1,\r\n    },\r\n    runcompile:{ \r\n        position: \"absolute\",\r\n         width: \"98%\",\r\n         backgroundColor: \"rgba(151, 151, 151,0.3)\",\r\n         height: \"660px\",\r\n         top: 55,\r\n         zIndex: -1,\r\n        paddingTop:\"30%\" \r\n    },\r\n  });\r\nclass C_Cpp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: 0,\r\n            cpp: `//Write your c++ code here\r\n#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n    cout << \"Hello World\" << endl;\r\n    int i;\r\n    cin>>i;\r\n    cout<<i;\r\n    return 0;\r\n}`,\r\ncurstate:\"\"\r\n        }\r\n    }\r\n    style={\r\n        main:{\r\n            zIndex:1\r\n        },\r\n        back:{\r\n            zIndex:-1\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.props.socket.on(\"running\",val=>{\r\n            if(val)\r\n            this.setState({curstate:\"run\"});\r\n        })\r\n        this.props.socket.on(\"exit\",val=>{\r\n            if(val)\r\n            this.setState({curstate:\"\"});\r\n        })\r\n    }\r\n    runcpp = () => {\r\n\r\n        // this.refs.cpp.innerHTML=this.state.cpp;\r\n        this.setState({curstate:\"comp\"});\r\n        let data = {\r\n            number: this.props.number,\r\n            code: this.state.cpp\r\n        }\r\n        this.props.socket.emit(\"runcpp\", data);\r\n       \r\n\r\n    }\r\n    updatecpp = val =>\r\n        this.setState({ cpp: val });\r\n    render() {\r\n        const { value ,curstate} = this.state;\r\n        const { socket,classes } = this.props;\r\n        return (\r\n            <Grid container>\r\n                <Grid item lg={6} sm={12} xs={12}>\r\n                    <div style={{ width: \"100%\", padding: \"1%\", position: \"relative\" }}>\r\n                        <Tabs\r\n                            value={value}\r\n                            onChange={this.changeValue}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            variant=\"scrollable\"\r\n                            scrollButtons=\"auto\"\r\n                        >\r\n                            <Tab label=\"c/c++\"></Tab>\r\n                            {/* <Tab label=\"JS\"></Tab> */}\r\n                        </Tabs>\r\n                        {/* {value===0&&<MyEditor mode=\"html\" theme=\"monokai\" update={this.updatehtml} defvalue={this.state.html}/>} */}\r\n\r\n                        {value === 0 && <MyEditor mode=\"c_cpp\" theme=\"monokai\" update={this.updatecpp} defvalue={this.state.cpp} />}\r\n                        <div className={classNames(classes.runcompile)}\r\n                        style={(curstate==\"comp\")?this.style.main:this.style.back}\r\n                        >\r\n                            <Typography\r\n                                variant=\"h4\"\r\n                            >\r\n                                Please Wait\r\n                    </Typography>\r\n                            <CircularProgress color=\"secondary\" />\r\n                            <Typography\r\n                                variant=\"h5\"\r\n                            >\r\n                                Compiling\r\n                    </Typography>\r\n                        </div>\r\n                        <div className={classNames(classes.runcompile)}\r\n                        style={(curstate==\"run\")?this.style.main:this.style.back}\r\n                        >\r\n                            <Typography\r\n                                variant=\"h4\"\r\n                            >\r\n                                Prgram Running\r\n                    </Typography>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item lg={6} sm={12} xs={12}>\r\n                    <div style={{ width: \"100%\", padding: \"1%\" }}>\r\n                        <div style={{ width: \"100%\", height: \"47px\", paddingTop: \"5px\" }}>\r\n\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={this.runcpp}\r\n                                style={{ float: \"left\" }}\r\n                            >\r\n                                run\r\n                    </Button>\r\n                        </div>\r\n                        <Term socket={socket}></Term>\r\n                    </div>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\nexport default withStyles(styles)(C_Cpp);","import React from \"react\";\r\nimport MyEditor from \"./editor\";\r\nimport {Route,Switch,Link} from \"react-router-dom\"\r\nimport {\r\n    AppBar,\r\n    CssBaseline,\r\n    Toolbar,\r\n    Typography,\r\n    Grid,\r\n    Tab,\r\n    Tabs,\r\n    Button\r\n} from \"@material-ui/core\";\r\nimport Web from \"./web\";\r\nimport C_Cpp from \"./c_cpp\";\r\n\r\nclass MainPage extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            value:3,\r\n            html:`<!--Write your html here-->`,\r\n            css:\"/*Write css here*/\",\r\n            js:\"//Write javascript here\",\r\n            cpp:\"//Write your c++ code here\",\r\n            input:\"\"\r\n        }\r\n    }\r\n    \r\n   \r\n    render() {\r\n        const {socket}=this.props;\r\n\r\n        return (\r\n            <CssBaseline>\r\n                <AppBar position=\"static\" color=\"default\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" color=\"inherit\"  style={{flex: 1,}} align=\"left\">\r\n                            Code Editor\r\n          </Typography>\r\n          <Link to=\"/web\">\r\n          <Button\r\n        //   style={{\r\n            //       flex:1,\r\n            //       flexGrow: 1,\r\n            //   }}\r\n            align=\"right\"\r\n            >\r\n              web\r\n          </Button>\r\n            </Link>\r\n            <Link to=\"/c_cpp\" >\r\n          <Button>\r\n              c_cpp\r\n          </Button>\r\n          </Link> \r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Switch>\r\n                <Route path=\"/c_cpp\" component={()=><C_Cpp socket={socket}></C_Cpp>}/>\r\n                <Route path=\"/web\" component={()=><Web></Web>}/>\r\n                <Route path=\"/\" component={()=><Web></Web>}/>\r\n                </Switch>\r\n                {/* <Web></Web> */}\r\n            </CssBaseline>\r\n        );\r\n    }\r\n}\r\nexport default MainPage;","import React, { Component } from 'react';\nimport './App.css';\nimport MainPage from \"./components/mainpage\"\nimport Term from \"./components/xterm\";\nimport io from 'socket.io-client';\nimport {BrowserRouter,Route} from \"react-router-dom\";\n \nconst socket = io(window.location.origin);\n\nclass App extends Component {\n  componentWillMount(){\n    this.setState({number:Math.random()});\n  }\n  // componentWillUnmount(){\n  //   this.done()\n  // }\ndone=()=>{\n \nfetch(`/del/${this.state.number}`,{method:\"DELETE\"})\n.then(res=>res.text())\n.then(res=>alert(res))\n.catch(err=>console.log(err));\n}\n  render() {\n    return (\n      <div className=\"App\">\n      <BrowserRouter>\n      <MainPage number={this.state.number} socket={socket}></MainPage>\n      </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}